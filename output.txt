float kp = 15, base_speed = 50;

bool b(int x) { return analog(x) < 500; }
bool w(int x) { return analog(x) > 500; }

// void pid() {
// 	int error = 0;
// 	if (b(0) && w(1) && w(2) && w(3) && w(4)) error = -4;
// 	else if (b(0) && b(1) && w(2) && w(3) && w(4)) error = -3;
// 	else if (w(0) && b(1) && w(2) && w(3) && w(4)) error = -2;
// 	else if (w(0) && b(1) && b(2) && w(3) && w(4)) error = -1;
// 	else if (w(0) && w(1) && b(2) && w(3) && w(4)) error = 0;
// 	else if (w(0) && w(1) && b(2) && b(3) && w(4)) error = 1;
// 	else if (w(0) && w(1) && w(2) && b(3) && w(4)) error = 2;
// 	else if (w(0) && w(1) && w(2) && b(3) && b(4)) error = 3;
// 	else if (w(0) && w(1) && w(2) && w(3) && b(4)) error = 4;
// 	float adjustment = kp * error;
// 	float left_speed = base_speed + adjustment;
// 	float right_speed = base_speed - adjustment;
// 	
// 	fd2((int)left_speed, (int)right_speed);
// }

// Just walk
void pid() {
	if (b(1) && w(3)) sl(50);
	else if (b(3) && w(1)) sr(50);
	else fd(50);
}

// void cross() {
//     
//     while (true) {
//         pid()
//     }
//     ao();
// }

void forward() {
    fd(50); sleep(1000);
    ao();
}

void left() {
    forward(); sl(50);
    while(b(2));
    while(w(2));
    ao();
}

void right() {
    forward(); sr(50);
    while(b(2));
    while(w(2));
    ao();
}
void cross() {
	while (true) {
		pid();
		if (b(0) && b(2) && b(4)) break;
	}
	ao();
}

void left_tack() {
	while (true) {
		pid();
		if (b(0) && b(2)) break;
	}
	ao();
}

void right_tack() {
	while (true) {
		pid();
		if (b(2) && b(4)) break;
	}
	ao();
}

void setup() {
	cross(); right();
	left_tack(); left();
	right_tack(); forward();
	left_tack(); forward();
	cross(); left();
	cross(); right();
	right_tack(); right();
	left_tack(); left();
	cross(); right();
	left_tack(); left();
	cross(); right();
	left_tack(); forward();
	cross(); left();
	right_tack(); right();
	right_tack(); right();
}

void loop() {}
